{
    "csse": [
        {
            "time": "12:30 PM - 12:45 PM",
            "projectId": "csse-3-1230",
            "title": "Armed Conquest: A 2D Platformer Game",
            "studentName": "Sergei Bakharev",
            "studentMajor": "CSSE",
            "projectType": "Group Project - Student Defined",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "./posters/csse/Sergei Andreevich Bakharev Poster 1.jpg",
            "abstract": "Armed Conquest is a sci-fi themed platformer shooter game development project that is based on the Unity game engine. It is a three person project built by myself (Sergei Bakharev), Ivan Hristov, and Gabriela Lenkov. With this project, our goal was to gain insight/experience into the process of developing a polished vertical slice of a larger system whilst following an iterative/incremental software development life cycle and refining based upon user feedback.\n\nThe challenge behind this project involved making sure that we are on track and meeting established milestone deadlines on a weekly basis, so that we are able to deliver a polished working product by the end of 8 weeks. In addition, many of the areas within this project were new to us. Our approach to overcoming these challenges was carefully deriving a weekly schedule with a focus on one main functionality, with the final two weeks including time for polish and refinement. To prevent falling behind, weekly meetings & daily log updates ensured that we are on track.\n\nMy role in this project was team lead, as my responsibilities encompassed mentoring and managing the team in addition to working on my own part each week. With this capstone, I experienced some of the challenges surrounding event planning, team training, iteration/sprint based development, and user elicitation techniques similar to that of a software development workplace environment.\n\nAt the conclusion of this agile 8 week development cycle, we have accomplished our goals and delivered a well polished standalone vertical slice demo that highlights the features of the game. Within this time period we explored and learned various elements of game development including autonomous behavior using finite state machines, level design, audio design, and building friendly user interfaces. As a result of this project, I was able to gain some valuable insight into project management, rapid iterative development, the importance of communication & collaboration within a software development team, and how a user’s feedback plays a role in the changes made to a system."        
        },
        {
            "time": "12:45 PM - 1:00 PM",
            "projectId": "csse-3-1245",
            "title": "Armed Conquest: A 2D Platformer Game",
            "studentName": "Ivan Hristov",
            "studentMajor": "CSSE",
            "projectType": "Group Project - Student Defined",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "./posters/csse/Sergei Andreevich Bakharev Poster 2.jpg",
            "abstract": "Armed Conquest is a Sci-Fi themed platformer shooter game development project developed based on the Unity game engine. This project was built in a team of three: Myself (Ivan Hristov), Gabriela Lenkov, and Sergei Bakharev. Our goals were to gain insight and experience regarding the process of developing a polished vertical slice  of a larger system while following an iterative/incremental SDLC and refining based on user feedback.\n\nThe challenge that was presented to us was fulfilling our learning goals while simultaneously developing in-game components, presenting progress, and staying on track to meet our milestones regarding delivering a polished and feature rich product in an eight week timeframe. Furthermore, many aspects of Unity and game development were new to us, so we found it difficult to familiarize ourselves with many of the concepts. \n\nAs a team we honed our resolve in self-driven research, thorough documentation, and prior knowledge from programming coursework. Through a weekly schedule we created a breakdown of features to be implemented each week in addition to documenting our progress and attending weekly meetings which helped us stay on track with attaining our learning goals and project objectives. \n\nOver the course of this capstone project, we were able to develop a polished game demo that can easily be expanded upon. My role was to develop quality game features and components that facilitated abstraction. Moreover, I strived to promote a positive learning environment through motivating and communicating with my team while generating a momentum to drive us towards the accomplishment of a common vision – the successful completion of our project. Through the exploration of user-friendly UI design, autonomous behaviours based on Finite State Machines, audio design, and level design, I was able to further my understanding and gain experience regarding project management, agile development, and solving technical problems with appropriate abstraction in an unfamiliar development environment."        
        },
        {
            "time": "1:00 PM - 1:15 PM",
            "projectId": "csse-3-100",
            "title": "Armed Conquest: A 2D Platformer Game",
            "studentName": "Gabriela Lenkov",
            "studentMajor": "CSSE",
            "projectType": "Group Project - Student Defined",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "./posters/csse/Sergei Andreevich Bakharev Poster 3.jpg",
            "abstract": "Armed Conquest is a Sci-Fi themed platformer game development project created based on the Unity game engine by me (Gabriela Lenkov), Ivan Hristov, and Sergei Bakharev. My role in this project was to collaborate in the development of the game component with items such as UI design, programming autonomous behavior, graphic design, and digital design specified by my deliverables based on my personal learning goals. With this project, our team goal was to gain insight into the process of creating a polished vertical slice of a larger game system in 8 weeks whilst incorporating an iterative/incremental software development life cycle, including refinement based on frequent user feedback. \n\nWhile progressively improving my software development skills, I have met and addressed several challenges along the way. I initially had to set personal goals which would then be followed in the development of each game component. With this came working in Unity – an unfamiliar development environment – and delivering results based on set milestones for each week. As a team we took on the task of self-driven research to further understand the behaviors, interactions, and UI we had initially outlined to implement. Additionally, event planning and organization was another new aspect of the development process we had to integrate within our schedule. To keep ourselves organized throughout our weekly progress we strictly followed an event timeline with key milestones over the course of our capstone, along with a milestone schedule in which we specified the tasks for each individual week. This enhanced our knowledge and led to efficient problem solving, code, and development. \n\nThis final polished game build includes menu interactions, audio, level design, interactables, NPC behavior, and UI which I now have a firm understanding of. In the future we can further expand on our game components as well as take our first steps towards becoming recreational game developers and applying our software development skills to other projects, team collaboration and ultimately the workplace. "        
        },
        {
            "time": "1:15 PM - 1:30 PM",
            "projectId": "csse-3-115",
            "title": "Exploring Financial Relationships Via Graphs",
            "studentName": "Leonardo Mota-Villaraldo",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - Google",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "./posters/csse/Leonardo Mota-Villaraldo.jpg",
            "abstract": "Google Cloud services hundreds of thousands of companies all over the world. A lot of these companies enter contracts with Google and Google provides them the services they agreed upon. Google is legally required to recognize revenue under the ASC 606 law. During my internship, I worked with the Revenue Recognition frontend team at Google Cloud to create a website to help accountants report revenue easily.\n\nMy project was to create a relationship graph to help accountants view all the services agreed upon in a contract, as well as all within an organization. This means that, when a company and Google Cloud enter a contract, my graph has to display the services agreed upon. A company may request a change in the services they need. When this change happens, my graph has to display them to the accountant.\n\nSince there are many services that can be provided in a contract, as well as many contracts that a company may enter with Google, visualizing the relationships between contracts and services becomes difficult. My relationships graph helps accountants group services by categories, quickly view information about a service, view all services in a contract, all contracts belonging to a company, and any changes that a company made to a service.\n\nI drove the majority of this project, including its design. I spoke with the frontend team to stick to conventions they were using. I also communicated with the backend team to get a sense of what data was coming in through the API. I also got a chance to talk to actual accountants and get their feedback on what they felt needed to be changed. Through collaborative work with multiple people, I was able to complete my project.\n\nThis project benefits the company by easing the burden on the accountants and helping them quickly obtain relevant information when reporting revenue."
        },
        {
            "time": "1:30 PM - 1:45 PM",
            "projectId": "csse-3-130",
            "title": "Freight Hopper Physics",
            "studentName": "Ayrton Muniz",
            "studentMajor": "CSSE",
            "projectType": "Group Project - Student Defined",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "./posters/csse/Ayrton Jorge Hancock Muniz.png",
            "abstract": "This project was developed by a student lead organization called “Husky Game Studio.” The primary focus of this studio is to develop interesting video games with an emphasis on good gameplay. As what makes a game interesting is its core gameplay. \n\nCurrently, the studio is working on a 3D physics platformer named “Freight Hopper.” The gameplay focuses on jumping on trains that are moving and affected by physics. For example, a train may collide into another one causing its carts and locomotive to explode and fall apart.\n\nMy part of this project was to work on the physics interactions for Freight Hopper. This involved working on features like teleportation portals which can teleport and launch the player around. It also included complex gravity systems that involve multiple gravitational bodies with different shapes. I have also worked on other systems including the player controller and different abilities such as a slam. The development of these features involved collaborating closely with other developers and game designers.\n\nAfter working on the physics-side of this project, I learned how to collaborate with other developers, profile my features to optimize performance, and apply linear algebra concepts. My contributions are used throughout the game for level building and the core gameplay of Freight Hopper."        
        },
        {
            "time": "1:45 PM - 2:00 PM",
            "projectId": "csse-3-145",
            "title": "Freight Hopper - Level Editor",
            "studentName": "Nina Panganiban",
            "studentMajor": "CSSE",
            "projectType": "Group Project - Student Defined",
            "facultyAdvisor": "Dr. Kelvin Sung",
            "posterLink": "./posters/csse/Nina Panganiban.png",
            "abstract": "Freight Hopper is a 3D action platformer that requires the player to parkour on trains in a dynamic physics environment. This project was developed by our student-led organization Husky Game Studio. Overall, there are 10 people working on Freight Hopper and each person tackles important components of game development, like 3D modelling, game design, etc.. \n\nMy capstone project was to create a level editor that allows the user to build levels using our assets, in order to increase the playability and community of our game. \n\nThe process started by collecting feedback and data from our target audience on what they were looking for in a level editor and what UI was the most intuitive for them. This is how I prioritized what our main functionalities should be and what the editor should look like. After that, I designed and implemented our editor in Unity. \n\nThe main functionalities that have been implemented include: saving/loading levels, object behavior support, object transforms, and the ability to play a level at any state. The UI reflects the best layout that our target audience chose within our surveys. The player is able to add/delete objects by clicking on its appropriate button, find objects using the dropdown organization, move within the building floor, and play/select levels with one-click. \n\nThrough this project, I have accomplished creating an intuitive editor with great roots in our desired functionalities, with the flexibility to add more features in the future. I have also learned a great deal about designing intuitive programs/UI and about collaborating extensively with other programmers. Overall, I know that I can take this experience and feel more confident about any of my future endeavors within CSSE.  "        
        },
        {
            "time": "2:00 PM - 2:15 PM",
            "projectId": "csse-3-200",
            "title": "P2P Marketplace: Model-View-Template (MVT) Architectural Design",
            "studentName": "Samuel Debesai",
            "studentMajor": "CSSE",
            "projectType": "Indivdual Project - Student Defined",
            "facultyAdvisor": "Dr. Arnie Lund",
            "posterLink": "./posters/csse/Samuel G Debesai.PNG",
            "abstract": "A Peer-2-Peer Marketplace is an online platform where individual sellers can use a decentralized method to sell products to a potential target audience with a desired need. The advantage of using a P2Pmarketplace is that it enables the seller to minimize marketing costs and enter a new avenue for customer relations. P2P is usually understood as the sole entity to engage with the system, yet the concept of allowing pet owners to sell/buy items on an online platform isn't widely popularized. By engaging a domain specifically for animals, people can find a way to discover many listings for a defined marketplace.\n\nThe purpose of this project was to develop a system that enables a niche of users to use a platform designed for trading and selling used/crafted items specific to a target audience. The system is built to support the processes of buying, selling, listing items, and managing your own seller's page for animal products. My approach was developed using the Django Web Framework that leverages the Model View Template architectural pattern, which is similar to Model-View-Controller in that the model supports the application data, the view contains the accessing of data, and the template defines the structure of the model and view.\n\nFor my development tools, I used Python to support my backend for the development of my data models and functionality. I used HTML to support my frontend, which handled the face of the website with the CSS design style to help better suit the marketplace image. My IDE was VSCode, which was handled on my local desktop.\n\nThe end result of the project is a web application that supports, maintains, and allows users to engage with a marketplace for their niche. By learning how to estimate time, workload, and requirements, I was able to develop this project by engaging in all parts of the agile methodology and gaining experience in full stack development and design."        
        },
        {
            "time": "2:15 PM - 2:30 PM",
            "projectId": "csse-3-215",
            "title": "Legal Consultancy Mobile App",
            "studentName": "Joaquin Luna Villagran",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - Share Business Strategy (SBS)",
            "facultyAdvisor": "Dr. Arnie Lund",
            "posterLink": "./posters/csse/Joaquin Luna Villagran.png",
            "abstract": "LEXSYS is a legal first contact tool offered through phone call, email and WhatsApp that's designed to provide clients with expertise on their legal problems whether they be a person or a company. It does this by providing consultancy in a variety of areas with the help of a group of specialized associated firms. Currently one of their main weak points is that its communication channels make the service very slow, inefficient to use, unappealing and really hard to match up clients ́ issues with the correct firms that can solve them. Because of this, the purpose of this project was to design and create a solution that mimics and improves the current way this service is given. The solution I proposed and decided to work on, was a MVP mobile application that will allow the service to test the effectiveness of this new technology and improve its efficiency and attractiveness.\n\nThe project was developed using React Native as this is a well proven cross platform development technology, Google Firebase for user authentication, Google Firebase’s Realtime Database to store user data and to power the chat feature within the app, Google Firebase’s Storage to store user profile pictures and legal support documents and Figma and Testflight for design and testing. The project was developed using Agile development methodologies where I performed user and system requirement analysis and specification, architectural, interaction and wireframe design, usability testing, prototype implementation and testing, and in some way deployment (Testflight) as part of the SDLC principles to meet users' and sponsors’ needs.\n\nThe end result is a quality fully functioning MVP that achieves the main goal of the project and serves as a basis for further development. This application includes two user app views (member and firm view), adaptive UI to user’s database data, intuitive design with service & associated firm information, user email & password authentication, a chat feature with real time messaging, chat creation which matches a consultancy area to its specialized firm, chat activation and deactivation, realtime chat updates and message updates, chat history, support legal documents and more. The significance of this project relies on the opportunity to work through the SDLC phases on a solution that addresses a current real-world problem while learning and improving skills on software design, user & computer interaction and mobile application development."        
        },
        {
            "time": "2:30 PM - 2:45 PM",
            "projectId": "csse-3-230",
            "title": "SWE/Implementation Consultant Intern at FAST Enterprises",
            "studentName": "Anirudh Prasad",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - FAST Enterprises",
            "facultyAdvisor": "Dr. Arnie Lund",
            "posterLink": "./posters/csse/Anirdh Arun Prasad.png",
            "abstract": "During the summer of 2021, I worked as a SWE/Implementation Consultant Intern for FAST Enterprises as part of my CSSE Capstone. I was assigned to work at the Sacramento Project Site, where FAST was contracted by the California Department of Tax and Fee Administration (CDTFA) to implement GenTax for the State of California. \n\nGenTax is FAST’s proprietary software that we were working on. Essentially, GenTax is tax software that FAST personalizes for state governments as part of their contract. The process of developing GenTax for the state and using it to replace their existing software is the Rollout Phase, and the process of providing support and consulting for the already-implemented GenTax software is the Product Support Phase. The version of GenTax developed specifically for use by the CDTFA is called CROS. \n\nAs part of my work at FAST, I was given specific bugs I had to fix. These bugs were listed as action items called SQRS, which were assigned to me by my manager. During my time at the Sacramento site, the FAST team was in the Product Support Phase, so most of the work being handled on the site were bug fixes and consulting, since we also had to teach the developers working for the California government how to work with CROS.\n\nIn the beginning, I was given simple SQRs that mainly just required text edits for the documents on CROS. As as I became more familiar with CROS, I was given more challenging SQRs which required me to write SQL queries to retrieve database information and edit business objects using Visual Basic .NET. It was difficult remembering all the different procedures for working with CROS, but I took notes to remember, which helped me later. During my time as an intern, new full-time hires would join our team, and I was often assigned to help familiarize them with CROS and answer their questions.\n\nOverall, my experience as an intern for FAST was a very enlightening one, especially since they mostly treated me like a full-time employee. By the end of my internship, I completed 8 SQRS in total, with about 4 more in progress during my last week. It was very interesting to see the bug fixes and edits I made reflected in the live product, and it helped me understand how important all kinds of SWE work can be."        
        },
        {
            "time": "2:45 PM - 3:00 PM",
            "projectId": "csse-3-245",
            "title": "IBM Backend Developer Internship",
            "studentName": "Kelly Pratama",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - IBM",
            "facultyAdvisor": "Dr. Arnie Lund",
            "posterLink": "./posters/csse/Kelly Pratama.png",
            "abstract": "During my internship at IBM, I had the opportunity with work on Db2, an enterprise database server product used by many well-known large enterprises for transactional and analytical data processing. Specifically, I interned with a team that develops data compression and storage features for Db2’s columnar data engine, where I helped develop a new testing approach to testing system software.\n\nComplex systems software such as Db2 requires rigorous testing to ensure the software meets functional and quality requirements. Traditional software quality assurance (QA) consists of two main testing approaches: functional verification testing (FVT), and system verification testing (SVT).  FVT is used to ensure new feature development meets functional specifications and are typically executed in development environments by developers.  SVT, on the other hand, is more broad-based, and is used to ensure the product performs well in complex, highly stressed and concurrent environments; SVT is executed by the testing team in customer-like environments toward the end of the product release.  In general, defects found during the FVT phase are reproducible and easier to diagnose. Defects found during SVT tend to be difficult to reproduce and diagnose due to complex timing events and race conditions.\n\nThe new testing approach I worked on aims to combine the advantages of FVT and SVT to help developers identify complex concurrent timing problems in development environments that are also reproducible for easier diagnosis. The new testing approach includes identifying specific timing events relevant to the feature being developed and creating testcases that focus on driving these specific events concurrently.  This approach provides earlier and faster testing while uncovering complex timing event problems.\n\nMy work included creating a customizable testing framework that runs this new testing approach known as Focused-SVT, that can drive concurrent scenarios over a user-specified length of time.  Additionally, I wrote design specifications and a usage document to allow various teams to use the tool. My mentor and I presented the completed work for use across different teams within the organization. We are currently in the process of improving the tool with additional features and automated testing."        
        },
        {
            "time": "3:00 PM - 3:15 PM",
            "projectId": "csse-3-300",
            "title": "Developing Composable Applications Internship at Purdue ITaP",
            "studentName": "Taylor Johnston",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - Purdue I Tap",
            "facultyAdvisor": "Dr. Erika Parsons",
            "posterLink": "./posters/csse/Taylor Sage Johnston.png",
            "abstract": "I have spent the last 6 months working at Purdue ITaP to deliver composable applications for the new Geddes cluster. The Geddes cluster is a new computing resource at Purdue University that utilizes Kubernetes orchestration via Rancher to make research computing more available and simpler to use for researchers by avoiding complex script management and job queuing. This is paired with a user-friendly UI that avoids the use of a command line terminal that might discourage researchers less familiar with research computing.\n\nTo encourage adoption of this new computing platform, I was placed into the Geddes Team in the ITaP Research Computing department and given the task of making several of the most popular research applications available on the new platform. With the goal of creating “1-click” composable applications I investigated the feasibility and usefulness of containerizing popular applications and deciding which to move forward on. Through consultations with other teams we developed a final list of containerized applications, which I then worked to implement. \n\nThe result of this effort was “1-click” deployable versions of three applications: Jupyterhub – a hub for Jupyter computing notebooks, Cryosparc – a graphical processing application designed for cryo-electron microscopy, and Alphafold – an application that predicts a protein’s structure from its amino acid sequence. Each of these was containerized and turned into a Kubernetes-deployable application using Helm package manager scripts, which allows for simple, fast, and replicable deployments through a clean UI, with the goal of each being deployable in just one click.\n\nThis has had a range of benefits for ITaP and researchers, saving time for both support staff and researchers, and lowing the bar for technical skills needed to do advanced research computing."        
        },
        {
            "time": "3:15 PM - 3:30 PM",
            "projectId": "csse-3-315",
            "title": "Purdue University Co-op HPC Systems Administrator",
            "studentName": "Victor Shaw",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - Purdue I Tap Research Company",
            "facultyAdvisor": "Dr. Erika Parsons",
            "posterLink": "./posters/csse/Victor Shaw.png",
            "abstract": "During my six-month internship at Purdue University, I worked in the Research Computing Department. Research Computing provides computational resources and support services to Purdue faculty and staff researchers. They also conduct their own research and development to improve their computational resources. They assigned me to the Geddes Team, and they're implementing and deploying a new shared computing resource that optimizes composable, cloud-like workflows. My task in the team was to create a 'one-click' deployment for scientific applications in the Geddes cluster.\n\nMy work was to deploy a Kubernetes cluster environment, investigate Nvidia’s multi-instance GPUs (MIG), and create an Nvidia Triton Server MIG horizontal pod auto scaler (HPA) helm chart. I deployed a test Kubernetes cluster environment to practice deploying containers and helm charts. It allows me to have my sandbox environment to try new things and make mistakes. In my cluster, I investigated different ways to partition one GPU into seven GPU instances through Nvidia’s MIG setting. A helm chart is a collection of YAML configuration files that deploys the application, boost productivity, reduce redundancy, and simplify deployment. Most applications do not have a helm chart and require extensive knowledge to deploy the application. The purpose of the helm chart is to simplify the deployment process and write YAML scripts to handle most of the deployment for researchers. \n\nMy work will help researchers deploy their applications within minutes and allow the researchers to focus on the scientific process. The helm charts allow researchers to spend less time figuring out how to deploy applications. It also makes scientific applications more accessible to researchers and students. "        
        }
    ]
}