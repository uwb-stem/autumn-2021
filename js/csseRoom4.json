{
    "csse": [
        {
            "time": "12:30 PM - 12:45 PM",
            "projectId": "csse-4-1230",
            "title": "Gradcent LLC Internship",
            "studentName": "Nikhil Alapati",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - Gradcent LC",
            "facultyAdvisor": "Dr. Hazeline Asuncion",
            "posterLink": "./posters/csse/Nikhil Alapati.png",
            "abstract": "This capstone involved me, Nikhil Alapati, working as an intern at Gradcent LLC.  Gradcent LLC is a startup based in the Seattle area. Started by Illarion Eremenko (Ex UWB student). Gradcent is currently working on a social media platform for students to connect with and get tutoring help from tutors who took the same (or similar) class. Gradcent is using web technologies such as Javascript, React, and React Native to build the front end and AWS, Dynamo DB, Node JS, and Redis to build the backend. The application will support Android, IOS, and desktop(with a web browser). In addition, my faculty advisor for this internship is Dr.Asuncion.\n\nI choose an internship for this capstone project because I want to help develop my industry skills in Front End technologies such as React and React Native. I also want to learn more about cloud computing architecture and backend development. This internship not only helped me achieve those goals but also improved my teamwork skills, project management skills, and critical thinking skills.In conclusion, my time and work at Gradcent was very challenging, but also rewarding and very beneficial to my software development skills. I learned about Cloud Infrastructure, front-end development, back-end development, security, and so much more."        
        },
        {
            "time": "12:45 PM - 1:00 PM",
            "projectId": "csse-4-1245",
            "title": "Detecting Secure Design Patterns in OS Projects",
            "studentName": "June Huang",
            "studentMajor": "CSSE",
            "projectType": "UWB CSS Faculty Research",
            "facultyAdvisor": "Dr. Hazeline Asuncion",
            "posterLink": "./posters/csse/June Huang.png",
            "abstract": "Design patterns provide general solutions to solve specific problems.  Those patterns can minimize the accidental insertion of vulnerabilities into code and mitigate consequences of these vulnerabilities.   Learning these patterns can help inexperienced software developers with their  design during the early stage of software development to minimize errors, allowing their design to be more flexible, more resilient to change, and easier to maintain. My project provides the groundwork for also detecting security design patterns in the future. \n\nMy main task in this project is to evaluate whether the tool we developed, PatternScout, can assist with detecting basic design patterns in code.  I worked on 25 open source projects online and 8 open source projects from CSS370 classes. I  transformed them into RDF graphs using CodeOntology.  Then, I ran design pattern queries, which were automatically generated by PatternScout, on these RDF graphs using Apache Jena.  I also used SPARQLS, a tool generated by another research student in the team, to run these queries in batches.  The output shows whether any design patterns have been detected in the code.  My presentation will show the results of my work.\n\nAfter I finished my research project, learning these new tools and knowledge helped me to learn secure design patterns in an easy and faster way. It will be very useful and can make my software design more secure, robust and maintain."        
        },
        {
            "time": "1:00 PM - 1:15 PM",
            "projectId": "csse-4-100",
            "title": "TCS Co-op - Enterprise Integration Platform",
            "studentName": "Kray Nguyen",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - Tata Consultancy Services",
            "facultyAdvisor": "Dr. Hazeline Asuncion",
            "posterLink": "./posters/csse/Kray Nguyen.jpg",
            "abstract": "Software integration ensures that any updated code will not defect the software system and it is particularly important in enterprise settings. Not only a failure in integration requires expensive fixing costs, it also affects users and customers on a large scale. \n\nThe challenge raised by Enterprise Application Integration or EAI, a traditional integrating architecture, is the focus on early broker or central integration engine solutions thus promoting waterfall over agile. Mule Enterprise Service Bus or Mule ESB offers a lightweight, robust, incremental, and scalable integration platform that allows developers to connect the enterprises’ ecosystem efficiently.  \n\nThe purpose of this project is to model API development life cycle and integration process from an internal existing project using Mulesoft technologies. The APIs are deployed on Mulesoft’s Anypoint Platform and can be quickly consumed by other developers and users through Anypoint Exchange. \n\nThe project is built mainly with Mulesoft tech stack utilizing Anypoint Platform, Studio, Exchange, Design Center, and Management Center. Advanced Rest Client is used to test API endpoints with its CRUD operation. Unit and integration testing are conducted using the Mule debugger. \n\nThis approach simplifies the integration process with pre-built templates and connectors. It also enables intuitive application and data integration across legacy systems and applications such as SaaS, PaaS, APIs. Ultimately, the approach offers agile and efficient development within the project.  "        
        },
        {
            "time": "1:15 PM - 1:30 PM",
            "projectId": "csse-4-115",
            "title": "Server Platform Validation & Automation",
            "studentName": "Hanna Hunde",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - Intel",
            "facultyAdvisor": "Dr. Afra Mashhadi",
            "posterLink": "./posters/csse/Hanna Hunde.PNG",
            "abstract": "Validation is an important phase of the software development process which determines weather a software meets the specified requirements. Xeon Platform Validation and Execution team at Intel executes multiple test cases to validate different technologies on Intel Server Platforms. I joined this team as a Validation Software Engineering Intern and was mainly responsible for designing and implementing automation test content.\n\nDuring this project, I validated and automated a security technology called Control-Flow Enforcement Technology (CET) on Intel Server Platforms. CET is an exploit protection technology implemented at a hardware level targeting ROP (return-oriented programming) and JOP (Jump oriented programming) exploits. ROP and JOP exploits are exploits where an attacker gains control of the call stack and execute malicious code on executable memory without being identified. CET has a component known as Shadow Stack that keeps track of the return addresses on the call stack and signals a compromise. \n\nValidation test cases must be executed multiple times in different environments and different versions. Test automation enables faster validation phase and makes it easier to detect bugs early. The purpose of this project was to automate CET test cases so that they can be run in different server platforms with different operating systems, CPU levels, virtual machines and so on. For the duration of my internship, I was able to complete the test automation plan for CET and reduce the amount of time it takes to manually execute test cases significantly. "        
        },
        {
            "time": "1:30 PM - 1:45 PM",
            "projectId": "csse-4-130",
            "title": "Software Engineering Internship at T-Mobile",
            "studentName": "Chris Kim",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - T-Mobile",
            "facultyAdvisor": "Dr. Wooyoung Kim",
            "posterLink": "./posters/csse/Chris Geol Kim.png",
            "abstract": "I’ve interned 6 months at T-Mobile as a Software Engineering Intern under the Wireline ERT team and Branded Hardware team. The Wireline ERT team are tasked with developing Business Process Management tools using Appian BPM, to aids the sales team in creating quotes for their clients. Appian is a new low-code solution that speeds up development of business processes management tools and automation. The Branded Hardware team are tasked with developing T-Mobile IoT devices, and I developed an iOS companion mobile app for a new device, using swiftUI. This companion app makes up an essential part in interacting with the new IoT device. As a result, I’ve made good contributions to both teams and their projects. I was mentored by a senior developer in the ERT team, and became a competent Appian programmer. I added conditional instructional text depending on which checkbox the user selected, checkbox filtering functionality to an existing interface that could filter wireline pricing results by different categories, and finished 2 new interfaces for a new process. My filtering functionalities were deployed to production, while my interfaces were handed off to the senior developers to use as part the process. I’m currently still with the Branded Hardware team and continuing efforts to develop the iOS mobile companion app to the new IoT device. I’ve been mentored by senior developers and a fellow intern to about the SwiftUI codebase and the IoT product in development. I’m working on the motion tab which will allow users to visually see the orientation and acceleration readings from the accelerometer in their IoT device. My branch was recently merged into the main branch. The codebase is still small, and I am one of the first developer to be working on it. In conclusion, Appian is an interesting low-code development platform, which allows a quick and unified system design of a multi-platform full-stack application. SwiftUI is a powerful UI framework and enjoyable to use with a bit of understanding of stacks. I’m excited to work in an innovative, emerging team, which is increasingly growing in importance to T-Mobile as a source of market growth. People are far more willing to buy IoT products than switch mobile carriers."
        },
        {
            "time": "1:45 PM - 2:00 PM",
            "projectId": "csse-4-145",
            "title": "Software Development Internship",
            "studentName": "Gonzalo Jr. Lara",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - Qualtrics",
            "facultyAdvisor": "Dr. Wooyoung Kim",
            "posterLink": "./posters/csse/Gonzalo Jr Lara.png",
            "abstract": "This summer I completed my 12-week internship at Qualtrics as an SDE Intern. My project consisted of primarily backend changes for a new feature to the existing system that my team maintains. With the assistance from my manager, mentor, and team lead I was able to acquire information to understand the existing system and be able to make the required code changes for my project. The frontend changes were very simple, basically only an additional checkbox appears in the UI based on a conditional selection from the existing UI options that reads “automatically create contact in directory, if contact does not exist”. The backend changes were primary passing a Boolean known as Contact Hydration based on the checkbox in the UI that when enabled data transfer occurs without storing in Redis (cache). The information passed is additional contact data for the logged in user such as email, first name, last name, etc. to check if a user exists within a directory and then create the user if it does not exist in the directory only when contact hydration is enabled. The existing code goes through a batch of request from the website and individually goes through one by one to filter its attributes and process each request. My code changes included creating a new Map to store all the request that have contact hydration enabled to verify if the logged user exists within the database, and if not create the user within the directory if needed. The next step was to pass the Map created with all requests that have contact hydration enabled to XMD integration for the XMD team to handle service for creating the contact within the specified directory database. Additionally, I wrote unit testing and modified the existing unit test for the changes that were implemented for the contact hydration project. The project problem statement is that Qualtrics clients currently can only populate the directory manually through a direct import or through an automation via Qualtrics existing API. The solution was to provide the ability to automatically create the contacts in the directory without configuring an import via API. Challenges that I encountered were initially understanding the existing code, version control, and the virtual work environment. I was able to successfully implement the code changes for my project feature as well as manually test E2E to validate and ensure every test case passed, which they all did. The feature was launched into production and my code changes appear in the repository for my team’s project which is very satisfying to know that my code will be utilized by Qualtrics platform users. My manager provided great feedback in terms of my work abilities, coding skills, and was very satisfied with my progress throughout the internship. The engineering committee was able to review my code changes, feedback from manager, and my demo presentation to ultimately provide me with a return offer to be a full-time engineer at Qualtrics which we have signed the contract. I am excited to continue to learn and build at Qualtrics as a full-time engineer and want to thank each and everyone that contributed to my success while in the CSSE program, I am beyond thankful for the opportunity. "        
        },
        {
            "time": "2:00 PM - 2:15 PM",
            "projectId": "csse-4-200",
            "title": "Access Control Service",
            "studentName": "Rodas Gebreslassie",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - Vizio",
            "facultyAdvisor": "Dr. Wooyoung Kim",
            "posterLink": "./posters/csse/Rodas Tesfaye Gebreslassie.png",
            "abstract": "With the recent advancements in technology and ever-evolving frontend frameworks, it is common to see internal sites in the software development industry that are mainly used to facilitate development-related  tasks.  While  many  companies  worry  about  implementing  access-control services  for  their  client-facing  sites,  they  don't  give  enough  attention  to  their  internal  sites. Sometimes  these  sites  can  be  used  by  developers  and  non-developer  internal  employees  alike, making  all  resources  of  the  site  easily  accessible  to  users  who  are  only  authenticated.  This  can cause a serious risk to the organization as some of those resources should only be accessible to users with specific skill sets.\n\nTo  solve  the  problem  associated  with  giving  full  access  to  all  users  that  use  the  site  for different purposes, it is important to implement an access-control service that restricts some users from accessing URL routes that are not directly related to the areas that they work on. Before  implementation  started,  2  different  ways  of  adding  authorization  to  the  site  were compared to find the optimal way of adding access control. The output of the access control service was  tested  with  different  access  rights  a  user  can  have  and  it  returned  HTTP  status  codes  that indicate the result of a request a user made to a protected route.\n\nThe result obtained from implementing the access-control service was restricting access to users with rights that don't qualify them to use the resource. Limiting access to internal resources to users that don't directly work on the specified resources makes things more secure, and it can prevent disastrous situations caused by giving unlimited access to all internal employees."        
        },
        {
            "time": "2:15 PM - 2:30 PM",
            "projectId": "csse-4-215",
            "title": "Conditional Hints",
            "studentName": "Mooaz Nasir",
            "studentMajor": "CSSE",
            "projectType": "Sponsored Internship - General Motors",
            "facultyAdvisor": "Dr. Clark Olson",
            "posterLink": "./posters/csse/Mooaz Nasir.jpg",
            "abstract": "This past summer, I worked as a Software Engineer Intern at General Motors. I was working with a team called the Smart Ecosystem which focuses primarily on car-to-voice communication through usage of Google Home and Amazon Alexa. I worked on the team to help them find a way to incorporate conditional hints into the communication between the user and the voice communication device.\n\nThe goal of the hints was not just to place them at the end of an interaction with the user. Rather, they involved a long process of research from the user’s perspective to fully understand their purpose. Thus, I worked with a design intern from another team who helped me to come up with a solution for the hints: to know where to exactly place them and what kinds of things the hints should even say (what sort of words or phrases) to the user.\n\nThe final product ended up using Spring Boot for the backend and Redis as a database. The ‘frontend’ was the user testing the voice communication device and speaking to the device which completed the task they asked and then produced a hint to say to the user. The current implementation gives the user a new feature to try and can be improved to include other kinds of messages like promotional or marketing. "        
        },
        {
            "time": "2:30 PM - 2:45 PM",
            "projectId": "csse-4-230",
            "title": "Bugtrax: Project Tracking Web App",
            "studentName": "Tanvir Tatla",
            "studentMajor": "CSSE",
            "projectType": "Individual Project - Student Defined",
            "facultyAdvisor": "Dr. Clark Olson",
            "posterLink": "./posters/csse/Tanvir Singh Tatla.png",
            "abstract": "The pandemic has changed how the world works together on long-term projects. Rather than meeting face-to-face, virtually everyone has started working remotely. Unfortunately, many challenges arise in long-term projects when teams do not meet in person. It can be difficult to keep track of who is working on a particular deliverable and what is not being worked on, especially when the project requirements are altered in later stages of the project lifecycle. Many of the students I have personally worked with since my first quarter at UWB have used Discord to communicate and share files or links. Rather than try to create an alternative that replaces Discord and does it all, I decided to create something that works with Discord.\n\nTo address the challenges described above, I decided to build a web application that helps users track the progress of their projects. The web app allows users to see who is working on a particular deliverable and which deliverables are available for users to add to their schedule. To integrate with Discord, I built a bot that announces new tasks/deliverables the moment they are created. This project was a great opportunity for me to get full stack experience, which is something I lack especially in the frontend department. I also got to create my own Web API and utilized multiple web services from AWS, Azure, and Auth0. As a result of completing this project, I feel much more comfortable with front end frameworks such as ASP.NET’s Blazor and web technologies like HTML and CSS."        
        },
        {
            "time": "2:45 PM - 3:00 PM",
            "projectId": "csse-4-245",
            "title": "Project JDR",
            "studentName": "Duncan Spani",
            "studentMajor": "CSSE",
            "projectType": "Group Project - Student Defined",
            "facultyAdvisor": "Dr. Clark Olson",
            "posterLink": "./posters/csse/Duncan Spani.png",
            "abstract": "One of the most used features of the modern internet is the ability to share files among peers, coworkers, or even across your own devices. Many of the applications used to send files often have a size limit, require additional steps to set up the software, or have optional encryption. Our aim with Project JDR was to solve these issues by providing an easy to use, cross-platform, end-to-end encrypted, file-sharing application to allow for uncapped file sharing among devices.\n\nA core feature of Project JDR is to allow for file sharing without needing to relay packets through a central server. While the server is still necessary to mediate the connection, we implemented a form of UDP hole punching to send files between peers. UDP hole punching works by using the known remote and local IP addresses to open a UDP listening ports on both devices allowing each peer to directly send UDP packets to one another. Using this form of connection, we reduce internet traffic by almost half since each peer is no longer communicating with the relay server while also easing the load on the central server. \n\nAnother crucial feature was to implement end-to-end encryption so only the sender and receiver can know what is being sent. This was done by using both asymmetric and symmetric encryption techniques to encrypt and decrypt data sent between devices. The server would supply the public keys to each peer and during file transmission the peers would agree on a symmetric key to help secure the data. \n\nAfter a lot of trial and error, Project JDR is able to achieve file transfer speeds of about 19.6 megabytes per second while also utilizing end-to-end encryption. While these results have something to be desired, they are very promising since we were able to establish peer-to-peer connections, fully encrypt all traffic, and successfully receive files of over 500 megabytes. In future versions of the project, we would like to make the networking much faster and more reliable, make the user interface more intuitive to use and make the setup of the application even easier."        
        },
        {
            "time": "3:00 PM - 3:15 PM",
            "projectId": "csse-4-300",
            "title": "JDR: Secure File Transfer Application",
            "studentName": "Jaeha Choi",
            "studentMajor": "CSSE",
            "projectType": "Group Project - Student Defined",
            "facultyAdvisor": "Dr. Clark Olson",
            "posterLink": "./posters/csse/Jaeha Choi.png",
            "abstract": "Sharing files between devices is one of the most used features on our computers and phone, and it’s getting more important day by day. Many people share PDF documents via emails, use cloud drives or FTP to share photos you’ve taken, or perhaps use a USB thumb drive to transfer files between PCs. While these are all valid methods of sharing files, sometimes it could be a little redundant. For example, email, cloud drives require setups and authentications, FTP requires additional settings to set up the server, and USB thumb drives require compatible hardware and a file system. For sharing simple files, we thought that there could be a better solution that does not require difficult settings or creating an account. JDR is an open-source cross-platform application that can exchange files securely.\n\nOne of the core features that we implemented in this project is end-to-end encryptions. Our goal is to encrypt files so that even the developers of this app cannot access files that are being transmitted. We have used the asymmetric key that works as identification for each user, which is used to sign/verify and encrypt/decrypt symmetric encryption keys. These symmetric encryption keys are then used to encrypt/decrypt file chunks that are being transmitted.\n\nAnother core feature that we implemented in this project is peer-to-peer connections. Because our goal was to create an app that does not require additional settings, we have implemented UDP hole punching, which is used to make connections between peers without port forwarding. UDP hole punching does not only save server bandwidth by allowing direct connections rather than relayed connections, but it also allows faster transfers between clients. Currently, we are still working on UDP packet re-ordering as well as packet acknowledgments on both desktop and mobile clients to make it more reliable.\n\nPreliminary results show that the desktop version of JDR can achieve a 19.6 megabytes per second transfer rate, which includes UDP data transfer and file encryption/decryption. While the result is subject to change based on further implementation, we believe that our software is competitive when compared to other existing software with similar features."        
        },
        {
            "time": "3:15 PM - 3:30 PM",
            "projectId": "csse-4-315",
            "title": "JDR: Secure File Transfer Application (Mobile)",
            "studentName": "Changyeon Seo",
            "studentMajor": "CSSE",
            "projectType": "Group Project - Student Defined",
            "facultyAdvisor": "Dr. Clark Olson",
            "posterLink": "./posters/csse/Changyeon Seo.jpg",
            "abstract": "Ever since we faced the growing epidemic, we moved the majority workforce from in-person to remote environments. From there, we switched original and good old methods of writing on a piece of paper with a pencil to a modern and trendy way to take notes, which is writing on your tablet. But there was only one major problem. It is hard to transfer the file to the user’s desktop or laptop unless the same company manufactures both devices. For example, people use an iPad to write down notes from lectures, and when they want to transfer their notes to a desktop (non-Mac devices), their options are suddenly limited. One way will be to send the file to an email and open the attached file from the desktop. However, people are tired and realize that this email method is unreliable because of the latency and limitations of file size you can send through email. The multiplatform app aims to develop and help the users with transferring files safely and easily.\n\nThe app mainly focused on customer satisfaction. Initially, we were thinking this app can grow fast and large because of the current pandemic and we want to increase the loyal number of customers by thinking what customers want. Before we began programming, we stepped back and created user cases. We finally decided to focus on encryption/decryption because it is the belief that providing secure connections through clients and protecting clients’ private information, sensitive data and providing end-to-end encryption are the key roles for this project. Providing secure and robust systems, catching minor bugs that can crash the app, will satisfy the customers and, therefore, we gain trust from them. I worked on mobile development, and prior to this project, I didn’t have any experience on the frontend, mobile, and big size of the project. However, after completing it, I felt comfortable understanding why object-oriented programming is important and began thinking about scalability and architecture before programming.\n\nAs a result, we finished implementing a multiplatform app that can share files between clients securely, and one step closer to developing a real-world app that we can deploy to the app store."        
        }
    ]
}